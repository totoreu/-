#include <vector>
#include <map>
#include <algorithm>

using namespace std;

// https://school.programmers.co.kr/learn/courses/30/lessons/120812

map<int, int> m;

void init(vector<int>& array) {
    for (auto& iter : array) {
        auto findIt = m.find(iter);
        if (findIt == m.end())
            m.insert({ iter, 1 });
        else
            findIt->second++;
    }
}

int findMax() {
    auto n = max_element(m.begin(), m.end(), 
        [](const auto& x, const auto& y) {
            return x.second < y.second;
        });
    return n->first;
}

bool check(int n) {
    auto findIt = m.find(n);
    int count = 0;
    for (auto& iter : m) {
        if (findIt->second == iter.second)
            count++;
    }
    return count > 1;
}

int solution(vector<int> array) {
    init(array);
    int n = findMax();
    return check(n) ? -1 : n;
}
